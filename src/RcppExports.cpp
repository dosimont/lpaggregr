// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// oaggregate
List oaggregate(NumericVector micro, SEXP th);
RcppExport SEXP _lpaggregr_oaggregate(SEXP microSEXP, SEXP thSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type micro(microSEXP);
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    rcpp_result_gen = Rcpp::wrap(oaggregate(micro, th));
    return rcpp_result_gen;
END_RCPP
}
// haggregate
List haggregate(NumericVector micro, NumericVector h, SEXP th);
RcppExport SEXP _lpaggregr_haggregate(SEXP microSEXP, SEXP hSEXP, SEXP thSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type micro(microSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type h(hSEXP);
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    rcpp_result_gen = Rcpp::wrap(haggregate(micro, h, th));
    return rcpp_result_gen;
END_RCPP
}
// daggregate
List daggregate(NumericVector micro, NumericVector h, SEXP th);
RcppExport SEXP _lpaggregr_daggregate(SEXP microSEXP, SEXP hSEXP, SEXP thSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type micro(microSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type h(hSEXP);
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    rcpp_result_gen = Rcpp::wrap(daggregate(micro, h, th));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP lpaggregr_daggregate(SEXP, SEXP, SEXP);
RcppExport SEXP lpaggregr_haggregate(SEXP, SEXP, SEXP);
RcppExport SEXP lpaggregr_oaggregate(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_lpaggregr_oaggregate", (DL_FUNC) &_lpaggregr_oaggregate, 2},
    {"_lpaggregr_haggregate", (DL_FUNC) &_lpaggregr_haggregate, 3},
    {"_lpaggregr_daggregate", (DL_FUNC) &_lpaggregr_daggregate, 3},
    {"lpaggregr_daggregate", (DL_FUNC) &lpaggregr_daggregate, 3},
    {"lpaggregr_haggregate", (DL_FUNC) &lpaggregr_haggregate, 3},
    {"lpaggregr_oaggregate", (DL_FUNC) &lpaggregr_oaggregate, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_lpaggregr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
